@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================

// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";
@import url('https://db.onlinewebfonts.com/c/f890eea2e91e1270ce7109e36a42260a?family=woodmart-font');
@import url(https://fonts.googleapis.com/css?family=Montserrat:regular,600&display=swap);
// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройка шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Montserrat";
$fontSize: toRem(14); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #747474; // Цвет шрифта по умолчанию
$menu: #333; // Цвет меню
$black: #000; // Черный
$white: #fff; // Белый
$hover: #34ef34; // Цвет ссылок при наведении
// Палитра цветов
// @import "base/colors-palette";

// Настройка адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 380;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1290;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 40;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: toEm(1360); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: toEm(992); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: toEm(768); // Телефоны L
$mobileSmall: toEm(576); // Телефоны S
$mobileXSmall: toEm(380); // Телефоны XS
// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// // Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// Подключение компонентов tailwind ============================================================================================================================================================================================== =============================================================================================== ===========================================================================
// @import "libs/tailwind";

// Стили тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================
body {
	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}
	// Сайт загружен
	.loaded & {
	}
}
// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	@supports (overflow: clip) {
		overflow: clip;
	}
	// Прижимаем footer
	> main {
		flex: 1 1 auto;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================

// (i) Стили будут применяться к
// всех классов, содержащих *__container
// Например header__container, main__container і т.п.
// Сниппет (HTML): cnt

@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@media (max-width:$tablet){
			padding-inline: 1.9375rem;
		}
		@media (max-width:$mobile){
			padding-inline: 2.4375rem; 
		}
		@media (max-width:$mobileSmall){
			padding-inline: 2.0625rem; 
		}
		@media (max-width:$mobileXSmall){
			padding-inline: 1.25rem; 
		}
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			@if ($maxWidthContainer>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			} @else {
				@include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
				@include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
			}
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
		} @else {
			@if ($containerPadding>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: 1920px) {
			max-width: toRem(1290);
		}
		// @media (max-width: $pc) {
		// 	max-width: toRem(970);
		// }
		@media (max-width: $tablet) {
			max-width: toRem(930);
		}
		@media (max-width: $mobile) {
			max-width: toRem(690);
		}
		@media (max-width: $mobileXSmall) {
			max-width: toRem(340);
		}
	}
}

// (i) Экспериментальный функционал
// Замена ограничивающего контейнера
[class*="--gc"] {
	@include gridContainer();
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";
